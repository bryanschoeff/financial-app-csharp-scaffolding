using System.Data;
using System.Data.SqlClient;
using System.Configuration;

namespace <%= ApplicationName %>.Models.<%= "#{@entity_type}.#{@filing_type}" %>
{
  public class Filing
  {
	public EntityFiling EntityFiling { get; set; }
	<% @tables.each do |table| %>
    public <%= "#{table.name} #{table.name} { get; set; }"  %><% end %>

    public Filing()
    {
	  this.EntityFiling = new EntityFiling();
	  <% @tables.each do |table| %>
	  <%= "this.#{table.name} = new #{table.name}();"  %><% end %> 
    }

	public void Load(string Hash)
	{
		this.EntityFiling.Load(Hash);

		int ID = this.EntityFiling.ID;
		<% @tables.each do |table| %>
        this.<%= table.name %>.LoadByFilingID(ID);<% end %>
	}
		
	public void Load(int ID)
    {     
		<% @tables.each do |table| %>
        this.<%= table.name %>.LoadByFilingID(ID);<% end %>
    }
	
	public void Save()
	{
		int tempid = this.EntityFiling.ID;
		this.EntityFiling.Save();
		SetID(this.EntityFiling.ID);
		SaveChildren();
		if (tempid == -1)
		{
			SaveNewJson();
		}
		else
		{
			UpdateJson();
		}
	}
	
	protected void SaveChildren()
	{
		<% @tables.each do |table| %>
		<%= "this.#{table.name}.Save();"  %><% end %> 
	}
	
	protected void SetID(int ID)
	{
		<% @tables.each do |table| %>
        this.<%= table.name %>.FilingID = ID;<% end %>
	}
    
	protected void SaveNewJson()
	{
		using (SqlConnection connection = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ConnectionString + ";initial catalog=<%= DatabaseName %>"))
		{
			SqlCommand command = new SqlCommand("FilingsJsonAdd", connection);

			command.CommandType = CommandType.StoredProcedure;
			command.Parameters.AddWithValue("@FilingID", this.EntityFiling.ID);
			command.Parameters.AddWithValue("@Data", Newtonsoft.Json.JsonConvert.SerializeObject(this));

			connection.Open();
			command.ExecuteNonQuery();
			connection.Close();
		}
	}

	protected void UpdateJson()
	{
		using (SqlConnection connection = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ConnectionString + ";initial catalog=<%= DatabaseName %>"))
		{
			SqlCommand command = new SqlCommand("FilingsJsonUpdateByFilingID", connection);

			command.CommandType = CommandType.StoredProcedure;
			command.Parameters.AddWithValue("@FilingID", this.EntityFiling.ID);
			command.Parameters.AddWithValue("@Data", Newtonsoft.Json.JsonConvert.SerializeObject(this));

			connection.Open();
			try
			{
				command.ExecuteNonQuery();
			}
			catch
			{
				SaveNewJson();
			}
			
			connection.Close();
		}
	}
  }
}
