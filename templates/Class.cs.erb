using System.Data.SqlClient;
using System.Configuration;

namespace <%= ApplicationName %>.Models.<%= "#{@entity_type}.#{@filing_type}" %>
{
  public class <%= name %>
  {
    public int ID { get; set; }
    <% @fields.each do |field| %>
    public <%= "#{field.csharp_type} #{field.csharp_name} { get; set; }"  %><% end %>

    public <%= @name %>()
    {
      this.ID = -1;
    }
    
    public void Load(int ID)
    {
      using (SqlConnection connection = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ConnectionString + ";initial catalog=OnlineFinancialStatements"))
      {
        SqlCommand command = new SqlCommand("<%= print_sql_sp_name_load %>", connection);
        SqlDataReader reader;
        
        command.Parameters.AddWithValue("@<%= @name  %>ID", ID);

        connection.Open();
        reader = command.ExecuteReader();                                                   
        reader.Read();
        <% @fields.each do |field| %>
        this.<%= field.csharp_name %> = (<%= field.csharp_type %>)reader["<%= field.sql_column_name %>"];<% end %>
		this.ID = ID;
        connection.Close();
      }
    }

    public void Save()
    {
      if (this.ID == -1)
      {
        SaveNew();
      }
      else
      {
        Update();
      }
    }

    protected void SaveNew()
    {
      using (SqlConnection connection = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ConnectionString + ";initial catalog=OnlineFinancialStatements"))
      {
        SqlCommand command = new SqlCommand("<%= print_sql_sp_name_save %>", connection);
        
        <% @fields.each do |field| %>
        command.Parameters.AddWithValue("<%= field.sql_parameter  %>", this.<%= field.csharp_name %>);<% end %>

        connection.Open();
        this.ID = (int)command.ExecuteScalar();
        connection.Close();
      }
    }

    protected void Update()
    {
      using (SqlConnection connection = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ConnectionString + ";initial catalog=OnlineFinancialStatements"))
      {
        SqlCommand command = new SqlCommand("<%= print_sql_sp_name_update %>", connection);

        command.Parameters.AddWithValue("@<%= @name %>ID", this.ID);
        <% @fields.each do |field| %>
        command.Parameters.AddWithValue("<%= field.sql_parameter  %>", this.<%= field.csharp_name %>);<% end %>

        connection.Open();
        command.ExecuteNonQuery();  
        connection.Close();
      }
    }

    public void Delete()
    {
      using (SqlConnection connection = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ConnectionString + ";initial catalog=OnlineFinancialStatements"))
      {
        SqlCommand command = new SqlCommand("<%= print_sql_sp_name_delete %>", connection);

        command.Parameters.AddWithValue("@<%= @name %>ID", this.ID);

        connection.Open();
        command.ExecuteNonQuery();  
        connection.Close();
      }
    }
  }
}
